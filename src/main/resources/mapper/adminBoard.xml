<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project3.yogiaudio.repository.interfaces.AdminBoardRepository">

<insert id="insertNotice">
	insert into board_notice set
					writer_id = #{writerId},
                    title = #{title},
                    content = #{content},
                    file_path = #{filePath},
                    created_at = now()
</insert>

<insert id="insertQnaReply">
	insert into board_qna_reply set 
				writer_id = #{writerId},
                board_qna_id = #{boardQnaId},
                content = #{content},
                created_at = now()
</insert>

<select id="findAllNotice" resultType="com.project3.yogiaudio.repository.entity.board.BoardNotice">
	select a.*, b.name as writerName from board_notice as a
	left join user as b <!-- left join -->
	on a.writer_id = b.id
	order by id desc limit ${offset}, #{pageSize}
</select>

<select id="countAllNotice" resultType="int">
	select count(*) from board_notice
</select>

<select id="findNoticeById" resultType="com.project3.yogiaudio.repository.entity.board.BoardNotice">
	select a.*, b.name as writerName from board_notice as a
	left join user as b
	on a.writer_id = b.id
	where a.id = #{id}
</select>

<select id="findAllQna" resultType="com.project3.yogiaudio.repository.entity.board.BoardQna">
	select a.*, b.name as writerName from board_qna as a
	left join user as b
	on a.writer_id = b.id
	order by a.id desc limit #{offset}, #{pageSize}
</select>

<select id="countAllQna" resultType="int">
	select count(*) from board_qna
</select>

<select id="findQnaById" resultType="com.project3.yogiaudio.repository.entity.board.BoardQna">
	select a.*, b.name as writerName from board_qna as a
	left join user as b
	on a.writer_id = b.id
	where a.id = #{id}
</select>

<select id="findAllReplyByBoardQnaId" resultType="com.project3.yogiaudio.repository.entity.board.BoardQnaReply">
	select a.*, b.name as writerName from board_qna_reply as a
	left join user as b
	on a.writer_id = b.id
	where board_qna_id = #{boardQnaId}
	order by a.id desc
</select>

<select id="findAllFree" resultType="com.project3.yogiaudio.repository.entity.board.BoardFree">
	select a.*, b.name as writerName from board_free as a
	left join user as b
	on a.writer_id = b.id
	order by a.id desc limit #{offset}, #{pageSize}
</select>

<select id="countAllFree" resultType="int">
	select count(*) from board_free
</select>

<select id="findFreeById" resultType="com.project3.yogiaudio.repository.entity.board.BoardFree">
	select a.*, b.name as writerName from board_free as a
	left join user as b
	on a.writer_id = b.id
	where a.id=#{id}
</select>

<select id="findAllCommentByBoardFreeId" resultType="com.project3.yogiaudio.repository.entity.board.BoardFreeComment">
	select a.*, b.name as writerName from board_free_comment as a
	left join user as b on a.writer_id = b.id
	where board_free_id=#{boardFreeId}
	order by a.id desc
</select>
	
<delete id="deleteNotice">
	delete from board_notice where id=#{id}
</delete>
	
<delete id="deleteQna">
	delete from board_qna where id=#{id}
</delete>
	
<delete id="deleteFree">
	delete from board_free where id=#{id}
</delete>
	
<delete id="deleteComment">
	delete from board_free_comment where id = #{id}
</delete>
	
<delete id="deleteCommentsByBoardFreeId">
	delete from board_free_comment where board_free_id = #{boardFreeId}
</delete>	

<delete id="deleteReply">
	delete from board_qna_reply where id = #{id}
</delete>
	
<delete id="deleteReplysByBoardQnaId">
	delete from board_qna_reply where board_qna_id = #{boardQnaId}
</delete>	

<update id="updateAnwerYnByInsertReply">
	update board_qna set answer_yn = 'Y' where id = #{id}
</update>

<update id="updateAnwerYnByDeleteReply">
	update board_qna set answer_yn = 'N' where id = #{id}
</update>

<update id="updateNotice">
update board_notice set 
	title = #{title},
	content = #{content},
	file_path = #{file_path}
	where id = #{id}
</update>


	


</mapper>