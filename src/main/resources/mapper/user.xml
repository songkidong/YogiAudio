<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper
	namespace="com.project3.yogiaudio.repository.interfaces.UserRepository">

	<!-- 회원 가입 -->
	<insert id="insert">
		INSERT INTO user (name, nickname, email, password,
		created_at)
		VALUES (#{name}, #{nickname}, #{email}, #{password},
		now());
	</insert>

	<!-- 회원 수정 -->
	<update id="updateById"
		parameterType="com.project3.yogiaudio.repository.entity.User">
		UPDATE user SET
		name = #{name},
		nickname =
		#{nickname},
		password = #{password},
		file_path =
		#{filePath}
		where id =
		#{id};
	</update>

	<!-- 회원 탈퇴 -->
	<update id="deleteById"
		parameterType="com.project3.yogiaudio.repository.entity.User">
		UPDATE user SET delete_yn = "Y", delete_at = now() WHERE
		id = #{id}
	</update>

	<!-- 이메일로 유저 조회 -->
	<select id="findByEmail"
		resultType="com.project3.yogiaudio.repository.entity.User">
		SELECT * FROM user WHERE email = #{email};
	</select>

	<!-- 아이디로 유저 조회 -->
	<select id="findById"
		resultType="com.project3.yogiaudio.repository.entity.User">
		select * from user where id =#{id}
	</select>

	<!-- 이름으로 유저 조회 -->
	<select id="findByName"
		resultType="com.project3.yogiaudio.repository.entity.User">
		select * from user where name =#{name}
	</select>

	<!-- 결제 내역 -->
	<select id="findAllHistory"
		resultType="com.project3.yogiaudio.repository.entity.History">
		select a.hno, a.amount, a.date, c.purchasename from
		history
		as a
		join user as b
		on a.id = b.id
		join purchase as c
		on a.pno = c.pno
		where a.id = #{userId}
		order by a.hno desc
		limit #{cri.offset}, #{cri.pageSize}
	</select>

	<select id="countAllHistory" resultType="int">
		select count(*) from history as a
		join user as b
		on a.id = b.id
		join purchase as c
		on a.pno = c.pno
		where a.id = #{userId}
	</select>
</mapper>