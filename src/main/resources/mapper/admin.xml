<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project3.yogiaudio.repository.interfaces.AdminRepository">

<select id="findAllUser" resultType="com.project3.yogiaudio.repository.entity.User">
	<!-- offset 속성 Criteria의 getOffset() 메서드로 받을 수 있음 -->
	select * from user order by id desc limit #{offset}, #{pageSize} 
</select>

<select id="countAllUser" resultType="int">
	select count(*) from user
</select>

<select id="countAllUserByUserRole" resultType="int">
	select count(*) from user where role='USER'
</select>

<select id="findAllMusic" resultType="com.project3.yogiaudio.repository.entity.Music">
	<!-- pageSize에 고정값 넣으니까 4페이지 11개 인데 5페이지 1개가 표시됨-->
	select * from music order by music_no desc limit ${offset}, #{pageSize} 
</select>

<select id="countAllMusic" resultType="int">
	select count(*) from music
</select>

<select id="findAllHistory" resultType="com.project3.yogiaudio.repository.entity.History">
	select a.hno, a.amount, a.date, b.name, b.nickname, c.purchasename from history as a
	join user as b
	on a.id = b.id
	join purchase as c
	on a.pno = c.pno
	order by a.hno desc
	limit #{offset}, #{pageSize} 
</select>

<select id="countAllHistory" resultType="int">
	select count(*) from history
</select>

<select id="findAllRefund" resultType="com.project3.yogiaudio.repository.entity.Refund">
	select a.*, b.name, b.nickname, 
	c.pno, c.amount, c.date, d.purchasename 
	from refund as a
	join user as b
	on a.user_id = b.id
	join history as c
	on a.hno = c.hno
	join purchase as d
	on c.pno = d.pno
	order by a.id desc
	limit #{offset}, #{pageSize} 
</select>

<select id="countAllRefund" resultType="int">
	select count(*) from refund
</select>

<select id="countAllMusicVideo" resultType="int">
	select count(*) from musicvideo
</select>

<select id="countAllIncompletedRefund" resultType="int">
	select count(*) from refund where refund_yn = 'N'
</select>
	
<delete id="deleteMusic">
	delete from music where music_no = #{musicNo}
</delete>

<update id="withdrawUser">
	update user set delete_yn = 'Y' where id=#{id}
</update>

<update id="updateRefund">
	update refund set refund_yn = 'Y' where id = #{id}
</update>
	

</mapper>